import admin from "firebase-admin";
import fs from "fs";

const serviceAccount = JSON.parse(fs.readFileSync("./serviceAccountKey.json", "utf8"));

if (!admin.apps.length) {
  admin.initializeApp({
    credential: admin.credential.cert(serviceAccount),
  });
}

export const authenticate = async (req, res, next) => {

  // Authentication key is passed in headers while sending request
  const authHeaders = req.headers.authorization;

  console.log(authHeaders);
  

  if (!authHeaders || !authHeaders.startsWith("Bearer ")) {
    return res.status(401).json({ message: "Unauthorized: No token provided" });
  }

  // Split breaks the string into an array 
  const idToken = authHeaders.split("Bearer ")[1];

  try {
    // Below fucntion is provided by firebase-admin library which helps to verify token generated by by firebase at the time of sending request
    const decodedToken = await admin.auth().verifyIdToken(idToken);

    // This decoded token contains details about the user 
    req.user = decodedToken; // Includes uid, email, etc.
    console.log(decodedToken);
    
    // And since this is a middleware we have write next()
    next();
  } catch (error) {
    console.error("Firebase Auth Error:", error);
    return res.status(401).json({ message: "Unauthorized: Invalid token" });
  }
};
